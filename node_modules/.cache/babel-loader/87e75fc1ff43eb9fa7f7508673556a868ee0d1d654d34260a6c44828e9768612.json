{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Documents\\\\Documents\\\\Eng Software\\\\danz\\\\src\\\\hooks\\\\useFavorites.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesContext = /*#__PURE__*/createContext(undefined);\nexport function FavoritesProvider({\n  children\n}) {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    // Carregar favoritos do localStorage\n    const savedFavorites = localStorage.getItem('danz_favorites');\n    if (savedFavorites) {\n      try {\n        setFavorites(JSON.parse(savedFavorites));\n      } catch (error) {\n        console.error('Erro ao carregar favoritos:', error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    // Salvar favoritos no localStorage\n    localStorage.setItem('danz_favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const addFavorite = (type, itemId) => {\n    const newFavorite = {\n      id: Date.now().toString(),\n      userId: 'current_user',\n      // Em uma aplicação real, isso viria do contexto de auth\n      type,\n      itemId,\n      createdAt: new Date().toISOString()\n    };\n    setFavorites(prev => {\n      // Verificar se já existe\n      const exists = prev.some(fav => fav.type === type && fav.itemId === itemId);\n      if (exists) return prev;\n      return [...prev, newFavorite];\n    });\n  };\n  const removeFavorite = (type, itemId) => {\n    setFavorites(prev => prev.filter(fav => !(fav.type === type && fav.itemId === itemId)));\n  };\n  const isFavorite = (type, itemId) => {\n    return favorites.some(fav => fav.type === type && fav.itemId === itemId);\n  };\n  const getFavoritesByType = type => {\n    return favorites.filter(fav => fav.type === type);\n  };\n  return /*#__PURE__*/_jsxDEV(FavoritesContext.Provider, {\n    value: {\n      favorites,\n      addFavorite,\n      removeFavorite,\n      isFavorite,\n      getFavoritesByType\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(FavoritesProvider, \"Ta5Hg12StVSJiEMWMKYcop5OdxE=\");\n_c = FavoritesProvider;\nexport function useFavorites() {\n  _s2();\n  const context = useContext(FavoritesContext);\n  if (context === undefined) {\n    throw new Error('useFavorites must be used within a FavoritesProvider');\n  }\n  return context;\n}\n_s2(useFavorites, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"FavoritesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","FavoritesContext","undefined","FavoritesProvider","children","_s","favorites","setFavorites","savedFavorites","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addFavorite","type","itemId","newFavorite","id","Date","now","toString","userId","createdAt","toISOString","prev","exists","some","fav","removeFavorite","filter","isFavorite","getFavoritesByType","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFavorites","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Home/Documents/Documents/Eng Software/danz/src/hooks/useFavorites.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { Favorite } from '../types';\r\n\r\ninterface FavoritesContextType {\r\n  favorites: Favorite[];\r\n  addFavorite: (type: 'event' | 'dancer' | 'contractor', itemId: string) => void;\r\n  removeFavorite: (type: 'event' | 'dancer' | 'contractor', itemId: string) => void;\r\n  isFavorite: (type: 'event' | 'dancer' | 'contractor', itemId: string) => boolean;\r\n  getFavoritesByType: (type: 'event' | 'dancer' | 'contractor') => Favorite[];\r\n}\r\n\r\nconst FavoritesContext = createContext<FavoritesContextType | undefined>(undefined);\r\n\r\nexport function FavoritesProvider({ children }: { children: ReactNode }) {\r\n  const [favorites, setFavorites] = useState<Favorite[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Carregar favoritos do localStorage\r\n    const savedFavorites = localStorage.getItem('danz_favorites');\r\n    if (savedFavorites) {\r\n      try {\r\n        setFavorites(JSON.parse(savedFavorites));\r\n      } catch (error) {\r\n        console.error('Erro ao carregar favoritos:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Salvar favoritos no localStorage\r\n    localStorage.setItem('danz_favorites', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const addFavorite = (type: 'event' | 'dancer' | 'contractor', itemId: string) => {\r\n    const newFavorite: Favorite = {\r\n      id: Date.now().toString(),\r\n      userId: 'current_user', // Em uma aplicação real, isso viria do contexto de auth\r\n      type,\r\n      itemId,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n\r\n    setFavorites(prev => {\r\n      // Verificar se já existe\r\n      const exists = prev.some(fav => fav.type === type && fav.itemId === itemId);\r\n      if (exists) return prev;\r\n      return [...prev, newFavorite];\r\n    });\r\n  };\r\n\r\n  const removeFavorite = (type: 'event' | 'dancer' | 'contractor', itemId: string) => {\r\n    setFavorites(prev => prev.filter(fav => !(fav.type === type && fav.itemId === itemId)));\r\n  };\r\n\r\n  const isFavorite = (type: 'event' | 'dancer' | 'contractor', itemId: string): boolean => {\r\n    return favorites.some(fav => fav.type === type && fav.itemId === itemId);\r\n  };\r\n\r\n  const getFavoritesByType = (type: 'event' | 'dancer' | 'contractor'): Favorite[] => {\r\n    return favorites.filter(fav => fav.type === type);\r\n  };\r\n\r\n  return (\r\n    <FavoritesContext.Provider value={{\r\n      favorites,\r\n      addFavorite,\r\n      removeFavorite,\r\n      isFavorite,\r\n      getFavoritesByType\r\n    }}>\r\n      {children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useFavorites() {\r\n  const context = useContext(FavoritesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useFavorites must be used within a FavoritesProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}