{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Documents\\\\Documents\\\\Eng Software\\\\danz\\\\src\\\\hooks\\\\useTheme.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport function ThemeProvider({\n  children\n}) {\n  _s();\n  const [theme, setThemeState] = useState('light');\n  useEffect(() => {\n    // Carregar tema salvo do localStorage\n    const saved = localStorage.getItem('artistpro_theme') || localStorage.getItem('danz_theme');\n    if (saved === 'light' || saved === 'dark') {\n      setThemeState(saved);\n    } else {\n      // Verificar preferência do sistema\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setThemeState(prefersDark ? 'dark' : 'light');\n    }\n  }, []);\n  useEffect(() => {\n    // Aplicar tema ao documento\n    document.documentElement.classList.remove('light', 'dark');\n    document.documentElement.classList.add(theme);\n    localStorage.setItem('artistpro_theme', theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setThemeState(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  const setTheme = newTheme => {\n    setThemeState(newTheme);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme,\n      setTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeProvider, \"Jg7kX3tl44AHRN9Wplaj1WmEy+o=\");\n_c = ThemeProvider;\nexport function useTheme() {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","undefined","ThemeProvider","children","_s","theme","setThemeState","saved","localStorage","getItem","prefersDark","window","matchMedia","matches","document","documentElement","classList","remove","add","setItem","toggleTheme","prev","setTheme","newTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Home/Documents/Documents/Eng Software/danz/src/hooks/useTheme.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\r\n\r\ninterface ThemeContextType {\r\n  theme: 'light' | 'dark';\r\n  toggleTheme: () => void;\r\n  setTheme: (theme: 'light' | 'dark') => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport function ThemeProvider({ children }: { children: ReactNode }) {\r\n  const [theme, setThemeState] = useState<'light' | 'dark'>('light');\r\n\r\n  useEffect(() => {\r\n    // Carregar tema salvo do localStorage\r\n    const saved = (localStorage.getItem('artistpro_theme') || localStorage.getItem('danz_theme')) as 'light' | 'dark' | null;\r\n    if (saved === 'light' || saved === 'dark') {\r\n      setThemeState(saved);\r\n    } else {\r\n      // Verificar preferência do sistema\r\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      setThemeState(prefersDark ? 'dark' : 'light');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Aplicar tema ao documento\r\n    document.documentElement.classList.remove('light', 'dark');\r\n    document.documentElement.classList.add(theme);\r\n    localStorage.setItem('artistpro_theme', theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setThemeState(prev => prev === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  const setTheme = (newTheme: 'light' | 'dark') => {\r\n    setThemeState(newTheme);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme, setTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTheme() {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzF,MAAMC,YAAY,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE3E,OAAO,SAASC,aAAaA,CAAC;EAAEC;AAAkC,CAAC,EAAE;EAAAC,EAAA;EACnE,MAAM,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAmB,OAAO,CAAC;EAElED,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,KAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAID,YAAY,CAACC,OAAO,CAAC,YAAY,CAA6B;IACxH,IAAIF,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,MAAM,EAAE;MACzCD,aAAa,CAACC,KAAK,CAAC;IACtB,CAAC,MAAM;MACL;MACA,MAAMG,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;MAC7EP,aAAa,CAACI,WAAW,GAAG,MAAM,GAAG,OAAO,CAAC;IAC/C;EACF,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd;IACAkB,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;IAC1DH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAACb,KAAK,CAAC;IAC7CG,YAAY,CAACW,OAAO,CAAC,iBAAiB,EAAEd,KAAK,CAAC;EAChD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxBd,aAAa,CAACe,IAAI,IAAIA,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAC5D,CAAC;EAED,MAAMC,QAAQ,GAAIC,QAA0B,IAAK;IAC/CjB,aAAa,CAACiB,QAAQ,CAAC;EACzB,CAAC;EAED,oBACExB,OAAA,CAACC,YAAY,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,KAAK;MAAEe,WAAW;MAAEE;IAAS,CAAE;IAAAnB,QAAA,EAC5DA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAACzB,EAAA,CAnCeF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAqC7B,OAAO,SAAS6B,QAAQA,CAAA,EAAG;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAGtC,UAAU,CAACK,YAAY,CAAC;EACxC,IAAIiC,OAAO,KAAKhC,SAAS,EAAE;IACzB,MAAM,IAAIiC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}