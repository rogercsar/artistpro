{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Documents\\\\Documents\\\\Eng Software\\\\danz\\\\src\\\\hooks\\\\useFavorites.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './useAuth';\nimport { isSupabaseConfigured } from '../lib/supabaseClient';\nimport { addFavoriteItem, fetchMyFavorites, removeFavoriteItem } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesContext = /*#__PURE__*/createContext(undefined);\nexport function FavoritesProvider({\n  children\n}) {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  const {\n    isAuthenticated\n  } = useAuth();\n  useEffect(() => {\n    const load = async () => {\n      if (isSupabaseConfigured && isAuthenticated) {\n        try {\n          const rows = await fetchMyFavorites();\n          setFavorites(rows);\n          try {\n            localStorage.setItem('artistpro_favorites', JSON.stringify(rows));\n          } catch {}\n          return;\n        } catch (e) {\n          console.error('Erro ao buscar favoritos do Supabase, usando localStorage', e);\n        }\n      }\n      // Fallback localStorage (migração de danz_* para artistpro_*)\n      const savedFavorites = localStorage.getItem('artistpro_favorites') || localStorage.getItem('danz_favorites');\n      if (savedFavorites) {\n        try {\n          setFavorites(JSON.parse(savedFavorites));\n        } catch (error) {\n          console.error('Erro ao carregar favoritos:', error);\n        }\n      } else {\n        setFavorites([]);\n      }\n    };\n    load();\n  }, [isAuthenticated]);\n  useEffect(() => {\n    // Salvar favoritos no localStorage usando nova chave\n    localStorage.setItem('artistpro_favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const addFavorite = async (type, itemId) => {\n    if (isSupabaseConfigured && isAuthenticated) {\n      const created = await addFavoriteItem(type, itemId);\n      if (created) {\n        setFavorites(prev => {\n          const exists = prev.some(f => f.type === created.type && f.itemId === created.itemId);\n          if (exists) return prev;\n          return [created, ...prev];\n        });\n      }\n      return;\n    }\n    const newFavorite = {\n      id: Date.now().toString(),\n      userId: 'current_user',\n      type,\n      itemId,\n      createdAt: new Date().toISOString()\n    };\n    setFavorites(prev => {\n      const exists = prev.some(fav => fav.type === type && fav.itemId === itemId);\n      if (exists) return prev;\n      return [newFavorite, ...prev];\n    });\n  };\n  const removeFavorite = async (type, itemId) => {\n    if (isSupabaseConfigured && isAuthenticated) {\n      const ok = await removeFavoriteItem(type, itemId);\n      if (ok) {\n        setFavorites(prev => prev.filter(fav => !(fav.type === type && fav.itemId === itemId)));\n      }\n      return;\n    }\n    setFavorites(prev => prev.filter(fav => !(fav.type === type && fav.itemId === itemId)));\n  };\n  const isFavorite = (type, itemId) => {\n    return favorites.some(fav => fav.type === type && fav.itemId === itemId);\n  };\n  const getFavoritesByType = type => {\n    return favorites.filter(fav => fav.type === type);\n  };\n  return /*#__PURE__*/_jsxDEV(FavoritesContext.Provider, {\n    value: {\n      favorites,\n      addFavorite,\n      removeFavorite,\n      isFavorite,\n      getFavoritesByType\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(FavoritesProvider, \"ERZEgf25aK1L2ugdbh30CUzioXU=\", false, function () {\n  return [useAuth];\n});\n_c = FavoritesProvider;\nexport function useFavorites() {\n  _s2();\n  const context = useContext(FavoritesContext);\n  if (context === undefined) {\n    throw new Error('useFavorites must be used within a FavoritesProvider');\n  }\n  return context;\n}\n_s2(useFavorites, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"FavoritesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAuth","isSupabaseConfigured","addFavoriteItem","fetchMyFavorites","removeFavoriteItem","jsxDEV","_jsxDEV","FavoritesContext","undefined","FavoritesProvider","children","_s","favorites","setFavorites","isAuthenticated","load","rows","localStorage","setItem","JSON","stringify","e","console","error","savedFavorites","getItem","parse","addFavorite","type","itemId","created","prev","exists","some","f","newFavorite","id","Date","now","toString","userId","createdAt","toISOString","fav","removeFavorite","ok","filter","isFavorite","getFavoritesByType","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFavorites","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Home/Documents/Documents/Eng Software/danz/src/hooks/useFavorites.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { Favorite } from '../types';\r\nimport { useAuth } from './useAuth';\r\nimport { isSupabaseConfigured } from '../lib/supabaseClient';\r\nimport { addFavoriteItem, fetchMyFavorites, removeFavoriteItem } from '../services/api';\r\n\r\ninterface FavoritesContextType {\r\n  favorites: Favorite[];\r\n  addFavorite: (type: 'event' | 'dancer' | 'contractor', itemId: string) => void;\r\n  removeFavorite: (type: 'event' | 'dancer' | 'contractor', itemId: string) => void;\r\n  isFavorite: (type: 'event' | 'dancer' | 'contractor', itemId: string) => boolean;\r\n  getFavoritesByType: (type: 'event' | 'dancer' | 'contractor') => Favorite[];\r\n}\r\n\r\nconst FavoritesContext = createContext<FavoritesContextType | undefined>(undefined);\r\n\r\nexport function FavoritesProvider({ children }: { children: ReactNode }) {\r\n  const [favorites, setFavorites] = useState<Favorite[]>([]);\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      if (isSupabaseConfigured && isAuthenticated) {\r\n        try {\r\n          const rows = await fetchMyFavorites();\r\n          setFavorites(rows);\r\n          try { localStorage.setItem('artistpro_favorites', JSON.stringify(rows)); } catch {}\r\n          return;\r\n        } catch (e) {\r\n          console.error('Erro ao buscar favoritos do Supabase, usando localStorage', e);\r\n        }\r\n      }\r\n      // Fallback localStorage (migração de danz_* para artistpro_*)\r\n      const savedFavorites = localStorage.getItem('artistpro_favorites') || localStorage.getItem('danz_favorites');\r\n      if (savedFavorites) {\r\n        try {\r\n          setFavorites(JSON.parse(savedFavorites));\r\n        } catch (error) {\r\n          console.error('Erro ao carregar favoritos:', error);\r\n        }\r\n      } else {\r\n        setFavorites([]);\r\n      }\r\n    };\r\n    load();\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    // Salvar favoritos no localStorage usando nova chave\r\n    localStorage.setItem('artistpro_favorites', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const addFavorite = async (type: 'event' | 'dancer' | 'contractor', itemId: string) => {\r\n    if (isSupabaseConfigured && isAuthenticated) {\r\n      const created = await addFavoriteItem(type, itemId);\r\n      if (created) {\r\n        setFavorites(prev => {\r\n          const exists = prev.some(f => f.type === created.type && f.itemId === created.itemId);\r\n          if (exists) return prev;\r\n          return [created, ...prev];\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    const newFavorite: Favorite = {\r\n      id: Date.now().toString(),\r\n      userId: 'current_user',\r\n      type,\r\n      itemId,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    setFavorites(prev => {\r\n      const exists = prev.some(fav => fav.type === type && fav.itemId === itemId);\r\n      if (exists) return prev;\r\n      return [newFavorite, ...prev];\r\n    });\r\n  };\r\n\r\n  const removeFavorite = async (type: 'event' | 'dancer' | 'contractor', itemId: string) => {\r\n    if (isSupabaseConfigured && isAuthenticated) {\r\n      const ok = await removeFavoriteItem(type, itemId);\r\n      if (ok) {\r\n        setFavorites(prev => prev.filter(fav => !(fav.type === type && fav.itemId === itemId)));\r\n      }\r\n      return;\r\n    }\r\n    setFavorites(prev => prev.filter(fav => !(fav.type === type && fav.itemId === itemId)));\r\n  };\r\n\r\n  const isFavorite = (type: 'event' | 'dancer' | 'contractor', itemId: string): boolean => {\r\n    return favorites.some(fav => fav.type === type && fav.itemId === itemId);\r\n  };\r\n\r\n  const getFavoritesByType = (type: 'event' | 'dancer' | 'contractor'): Favorite[] => {\r\n    return favorites.filter(fav => fav.type === type);\r\n  };\r\n\r\n  return (\r\n    <FavoritesContext.Provider value={{\r\n      favorites,\r\n      addFavorite,\r\n      removeFavorite,\r\n      isFavorite,\r\n      getFavoritesByType\r\n    }}>\r\n      {children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useFavorites() {\r\n  const context = useContext(FavoritesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useFavorites must be used within a FavoritesProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}