{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const FavoritesContext=/*#__PURE__*/createContext(undefined);export function FavoritesProvider(_ref){let{children}=_ref;const[favorites,setFavorites]=useState([]);useEffect(()=>{// Carregar favoritos do localStorage\nconst savedFavorites=localStorage.getItem('danz_favorites');if(savedFavorites){try{setFavorites(JSON.parse(savedFavorites));}catch(error){console.error('Erro ao carregar favoritos:',error);}}},[]);useEffect(()=>{// Salvar favoritos no localStorage\nlocalStorage.setItem('danz_favorites',JSON.stringify(favorites));},[favorites]);const addFavorite=(type,itemId)=>{const newFavorite={id:Date.now().toString(),userId:'current_user',// Em uma aplicação real, isso viria do contexto de auth\ntype,itemId,createdAt:new Date().toISOString()};setFavorites(prev=>{// Verificar se já existe\nconst exists=prev.some(fav=>fav.type===type&&fav.itemId===itemId);if(exists)return prev;return[...prev,newFavorite];});};const removeFavorite=(type,itemId)=>{setFavorites(prev=>prev.filter(fav=>!(fav.type===type&&fav.itemId===itemId)));};const isFavorite=(type,itemId)=>{return favorites.some(fav=>fav.type===type&&fav.itemId===itemId);};const getFavoritesByType=type=>{return favorites.filter(fav=>fav.type===type);};return/*#__PURE__*/_jsx(FavoritesContext.Provider,{value:{favorites,addFavorite,removeFavorite,isFavorite,getFavoritesByType},children:children});}export function useFavorites(){const context=useContext(FavoritesContext);if(context===undefined){throw new Error('useFavorites must be used within a FavoritesProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","FavoritesContext","undefined","FavoritesProvider","_ref","children","favorites","setFavorites","savedFavorites","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addFavorite","type","itemId","newFavorite","id","Date","now","toString","userId","createdAt","toISOString","prev","exists","some","fav","removeFavorite","filter","isFavorite","getFavoritesByType","Provider","value","useFavorites","context","Error"],"sources":["C:/Users/Home/Documents/Documents/Eng Software/danz/src/hooks/useFavorites.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { Favorite } from '../types';\r\n\r\ninterface FavoritesContextType {\r\n  favorites: Favorite[];\r\n  addFavorite: (type: 'event' | 'dancer' | 'contractor', itemId: string) => void;\r\n  removeFavorite: (type: 'event' | 'dancer' | 'contractor', itemId: string) => void;\r\n  isFavorite: (type: 'event' | 'dancer' | 'contractor', itemId: string) => boolean;\r\n  getFavoritesByType: (type: 'event' | 'dancer' | 'contractor') => Favorite[];\r\n}\r\n\r\nconst FavoritesContext = createContext<FavoritesContextType | undefined>(undefined);\r\n\r\nexport function FavoritesProvider({ children }: { children: ReactNode }) {\r\n  const [favorites, setFavorites] = useState<Favorite[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Carregar favoritos do localStorage\r\n    const savedFavorites = localStorage.getItem('danz_favorites');\r\n    if (savedFavorites) {\r\n      try {\r\n        setFavorites(JSON.parse(savedFavorites));\r\n      } catch (error) {\r\n        console.error('Erro ao carregar favoritos:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Salvar favoritos no localStorage\r\n    localStorage.setItem('danz_favorites', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const addFavorite = (type: 'event' | 'dancer' | 'contractor', itemId: string) => {\r\n    const newFavorite: Favorite = {\r\n      id: Date.now().toString(),\r\n      userId: 'current_user', // Em uma aplicação real, isso viria do contexto de auth\r\n      type,\r\n      itemId,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n\r\n    setFavorites(prev => {\r\n      // Verificar se já existe\r\n      const exists = prev.some(fav => fav.type === type && fav.itemId === itemId);\r\n      if (exists) return prev;\r\n      return [...prev, newFavorite];\r\n    });\r\n  };\r\n\r\n  const removeFavorite = (type: 'event' | 'dancer' | 'contractor', itemId: string) => {\r\n    setFavorites(prev => prev.filter(fav => !(fav.type === type && fav.itemId === itemId)));\r\n  };\r\n\r\n  const isFavorite = (type: 'event' | 'dancer' | 'contractor', itemId: string): boolean => {\r\n    return favorites.some(fav => fav.type === type && fav.itemId === itemId);\r\n  };\r\n\r\n  const getFavoritesByType = (type: 'event' | 'dancer' | 'contractor'): Favorite[] => {\r\n    return favorites.filter(fav => fav.type === type);\r\n  };\r\n\r\n  return (\r\n    <FavoritesContext.Provider value={{\r\n      favorites,\r\n      addFavorite,\r\n      removeFavorite,\r\n      isFavorite,\r\n      getFavoritesByType\r\n    }}>\r\n      {children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useFavorites() {\r\n  const context = useContext(FavoritesContext);\r\n  if (context === undefined) {\r\n    throw new Error('useFavorites must be used within a FavoritesProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}